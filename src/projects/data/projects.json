[{
    "header": "LISTAPP",
    "image": "/images/listapp.png",
    "meta": "Created in 2019",
    "description": "A full-stack Laravel and Vue.js app for creating and sharing lists",
    "modalTarget": "listapp",
    "modalSubheader": "A full-stack Laravel and Vue.js app for creating and sharing lists",
    "modalDescription": [
        "I built this app using every part of the web application stack. I created the frontend using Vue.js and styled it with Vuetify. I built the backend using Laravel connected to a MySQL database.",
        "Using Vue.js, I was able to build-out the frontend logic of the application. The application consists of various custom Vue components which are placed in view by Vue Router. Those Vue components consist of various Material Design components provided by the Vuetify framework. Data that is retrieved from the backend is held in a Vuex store along with other frontend data that needs to be used across the application. All of the frontend scripts, styles, images, and components are compiled during deployment by Laravel Mix, a wrapper for Webpack.",
        "I used Laravel, a PHP framework, for the backend logic. Routing and logic held in controllers was written in PHP while migrations, queries, and models for the MySQL database were created using the Eloquent ORM. Authentication and registration of users is handled by Laravel Passport. Both web and API versions exist of every endpoint so that the frontend always has proper data whether directly navigating to a route or transitioning between routes while using the app.",
        "You should feel free to use listapp yourself to create some lists of your own. Or just browse the most popular lists to see if anything inspires you."
    ],
    "modalSkills": ["Laravel", "Vue.js", "PHP", "JavaScript", "Eloquent ORM", "MySQL", "Laravel Passport", "Laravel Mix", "HTML", "CSS"],
    "modalWhatFor": "I built this app in order to learn the complete process of building a full-stack web application. While previous projects of mine had touched various parts of the application stack, I had never implemented something from the ground-up that covered the entire spectrum of the frontend, backend, CRUD, authentication, deployment, and more. This project gave me the opportunity to do just that along with learning some frameworks and languages that were new to me.",
    "modalButtons": [{
        "link": "http://listapp.danielletscher.com/",
        "name": "Open listapp",
        "icon": "external"
    }],
    "extra": "Check it out",
    "extraIcon": "external",
    "extraLink": "http://listapp.danielletscher.com/"
}, {
    "header": "FIRST AID BOT",
    "image": "/images/first-aid.png",
    "meta": "Created in 2017",
    "description": "A chatbot web application that serves up first aid instructions, diagrams, and videos",
    "modalTarget": "worst-aid",
    "modalSubheader": "A chatbot dedicated to answering first aid questions using instructions, diagrams, and videos",
    "modalDescription": [
        "This chatbot responds with a treatment routine when the user asks it about a first aid situation. The user can then progress through the routine step-by-step using natural language or can ask a question about a particular step. If a question is asked, the chatbot can respond with either some information, a diagram, or an instructional video.",
        "Our team was responsible for creation of the chatbot interface and walking through routines we fetched from the web. We used Python package Beautiful Soup to scrape the DOM of WebMD first aid pages. Content from those pages gets translated into ordered procedures and then inserted into a Redis database. We also classify if-else branch statements within those procedures using Python package spaCy. Our walker was designed to allow the user to use natural language to say whether or not an if condition applied. The walker procedes down the user-specified branch. Whenever the user asks question, our RESTful API queries the question and answer service developed by the other teams and provide it the current node of our walker for context. We implemented the frontend user interface using Vue.js and the backend routing using Flask.",
        "I've hosted the chatbot live to try out; just click the link below. The hosted demo doesn't include the question and answer service from the other teams, so responses to those queries are stubbed out."
    ],
    "modalSkills": ["Python", "Flask", "JavaScript", "Vue.js", "spaCy", "Beautiful Soup", "Redis", "HTML", "CSS", "Docker"],
    "modalWhatFor": "This bot was built by my teammates and I for a Northwestern EECS project course. We built it to contribute to the professor's quarter-long goal for the course: to have three discrete teams all contribute independent systems that would come together to be a first aid bot. Our team was responsible for providing the central chatbot interface and commands as well as first aid procedures parsed from the web.",
    "modalButtons": [{
            "link": "http://firstaid.danielletscher.com/",
            "name": "Live Demo",
            "icon": "external"
        },
        {
            "link": "https://github.com/ngparas/worst-aid-parsing",
            "name": "GitHub",
            "icon": "github"
        }
    ],
    "extra": "Check it out",
    "extraIcon": "external",
    "extraLink": "http://firstaid.danielletscher.com/"
}, {
    "header": "THIS SITE",
    "image": "/images/thissite.png",
    "meta": "Created in 2018",
    "description": "A personal showcase web application built using a React frontend connected to an Express backend",
    "modalTarget": "portfolio",
    "modalSubheader": "A personal portfolio web application with a React frontend and Express backend",
    "modalDescription": [
        "I built this portfolio site in two discrete parts. The first is a frontend built in React and styled using Semantic-UI and custom CSS. The second is a backend routed using Express that serves up data and content for the frontend to display.",
        "I built the frontend primarily using React components and custom styling where needed. Most of the UI elements used come from the React integration of Semantic-UI. Other smaller components were used too. For instance, this modal you are looking at is the animatedModal.js jQuery plugin that I ported over to React for use on this portfolio. Using React's component lifecycle, the frontend queries the backend for data and content to display when components are ready for view.",
        "I routed the backend using the Express web framework. The routing serves up data to the frontend using API endpoints that respond with JSON-formatted content, images, or documents. The frontend simply forwards requests to the backend by specifying the backend as a proxy.",
        "I hope you find the portfolio a useful way to learn a little bit about myself."
    ],
    "modalSkills": ["React", "Express", "JavaScript", "Node.js", "HTML", "CSS"],
    "modalWhatFor": "I didn't have a website to showcase myself, so I created one. I wanted to use the opportunity to learn about a popular framework I didn't know much about, React, and to hone my skills in other areas where I already had experience.",
    "modalButtons": [{
        "link": "https://github.com/Letsch22/portfolio",
        "name": "GitHub",
        "icon": "github"
    }],
    "extra": "GitHub",
    "extraIcon": "github",
    "extraLink": "https://github.com/Letsch22/portfolio"
}]